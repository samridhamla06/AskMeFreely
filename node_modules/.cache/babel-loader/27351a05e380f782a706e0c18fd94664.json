{"ast":null,"code":"import _slicedToArray from \"C:\\\\project experts\\\\askmefreely\\\\AskMeFreely\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\project experts\\\\askmefreely\\\\AskMeFreely\\\\src\\\\MyComponents\\\\Session.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { COMPLETE_SESSION_URL, ACCESS_TOKEN, CREATE_REVIEW_URL } from '../constants/url';\nimport Modal from 'react-bootstrap/Modal';\nimport swal from 'sweetalert';\nimport Rating from 'react-rating';\nimport { checkTokenFromResponse } from '../utils/UserLoginUtils';\nimport { useNavigate, Link } from 'react-router-dom';\nexport var Session = function Session(props) {\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, []);\n  var navigate = useNavigate();\n  console.log('session obj ', props);\n  var access_token = localStorage.getItem(ACCESS_TOKEN);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSpinner = _useState2[0],\n      setShowSpinner = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showReviewButtonSpinner = _useState4[0],\n      setShowReviewButtonSpinner = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showReviewPrompt = _useState6[0],\n      setShowReviewPrompt = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rating = _useState8[0],\n      setRating = _useState8[1];\n\n  var handleRating = function handleRating(rate) {\n    setRating(rate);\n  };\n\n  var createReview = function createReview(event) {\n    event.preventDefault();\n    setShowReviewButtonSpinner(true);\n    var access_token = localStorage.getItem(ACCESS_TOKEN);\n\n    if (!access_token) {\n      swal(\"Oops!\", \"Please login to Book\", \"error\");\n      return;\n    } //construct body\n\n\n    var requestBody = {\n      sessionId: props.session.id,\n      review: event.target.reviewMessage ? event.target.reviewMessage.value : \"\",\n      actualRating: rating\n    };\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': access_token\n      },\n      body: JSON.stringify(requestBody)\n    };\n    fetch(CREATE_REVIEW_URL, requestOptions).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (checkTokenFromResponse(response, props.updateUser)) {\n        //navigate to homepage\n        navigate(\"/\", {\n          replace: true\n        });\n        return;\n      }\n\n      if (response.status == 'Successfully Saved') {\n        swal(\"Thank you\", \"Feedback is successfully shared\", \"success\");\n      } else {\n        swal(\"Oops\", \"ERROR OCCURED, TRY AGAIN\", \"error\");\n      }\n    }).catch(function (err) {\n      console.log(err);\n    }).finally(function () {\n      /**\r\n       * render count basically forces SessionList to reload and rerun useEffect again and call sessions again.\r\n       */\n      setShowReviewButtonSpinner(false);\n      setShowReviewPrompt(false);\n      props.setRenderCount(function (oldValue) {\n        return oldValue + 1;\n      });\n    });\n  };\n\n  var completeSession = function completeSession(event) {\n    console.log('complete session called');\n    var requestBody = {\n      mentorId: props.session.mentorId,\n      id: props.session.id\n    };\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': access_token\n      },\n      body: JSON.stringify(requestBody)\n    };\n    console.log(requestOptions);\n    setShowSpinner(true);\n    fetch(COMPLETE_SESSION_URL, requestOptions).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (checkTokenFromResponse(response, props.updateUser)) {\n        //navigate to homepage\n        navigate(\"/\", {\n          replace: true\n        });\n        return;\n      }\n\n      if (response.status == 'Successfully Saved') {\n        swal(\"Awesome\", \"Session is Completed\", \"success\");\n      } else {\n        swal(\"Oops\", \"ERROR OCCURED, TRY AGAIN\", \"error\");\n      }\n    }).catch(function (err) {\n      console.log(err);\n    }).finally(function () {\n      /**\r\n       * render count basically forces SessionList to reload and rerun useEffect again and call sessions again.\r\n       */\n      props.setRenderCount(function (oldValue) {\n        return oldValue + 1;\n      });\n      setShowSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showReviewPrompt && /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    style: {\n      opacity: 1,\n      display: 'block',\n      alignContent: 'center'\n    },\n    show: true,\n    onHide: function onHide() {\n      return setShowReviewPrompt(false);\n    },\n    centered: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    style: {\n      fontWeight: '700',\n      marginBottom: '5px',\n      fontSize: '20px',\n      color: '#012970',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Give Review\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"Please give your honest feedback/review for the session you had with \", props.session.mentorId, \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, \"Overall Rating:\"), /*#__PURE__*/React.createElement(Rating, {\n    emptySymbol: \"fa fa-star-o fa-2x \",\n    fullSymbol: \"fa fa-star fa-2x checked\",\n    onChange: handleRating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createReview,\n    className: \"d-flex flex-column justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group align-self-stretch m-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"reviewMessage\",\n    rows: \"6\",\n    width: \"100%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"myButton mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, showReviewButtonSpinner ? /*#__PURE__*/React.createElement(\"span\", {\n    class: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, \"Send Review\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-lg-4 col-md-6 col-sm-12 mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    style: {\n      height: '17rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"list-group list-group-flush\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 53\n    }\n  }, \"Booking Date \"), \" \", props.session.createTs.substring(0, 10)), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 53\n    }\n  }, \"Name \"), \"  \", props.asMentor ? props.session.menteeName : props.session.mentorName, \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    class: \"list-group-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 53\n    }\n  }, \"Current Status \"), \"  \", props.session.sessionStatus)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, props.asMentor ? /*#__PURE__*/React.createElement(React.Fragment, null, props.session.sessionStatus === 'COMPLETED' || props.session.sessionStatus === 'PENDING_MENTEE_FEEDBACK' ? \"Session Already Completed by you!\" : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"myButton m-lg-1 text-center p-2\",\n    onClick: completeSession,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, showSpinner ? /*#__PURE__*/React.createElement(\"span\", {\n    class: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"bi bi-award-fill\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 51\n    }\n  }), \" Complete\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, !props.session.isReviewDone ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"myButton m-lg-1 text-center p-2\",\n    onClick: function onClick() {\n      setShowReviewPrompt(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-commenting-o\",\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 56\n    }\n  }), \" Submit Review\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Review Submitted!!!\"))))));\n};","map":{"version":3,"sources":["C:/project experts/askmefreely/AskMeFreely/src/MyComponents/Session.js"],"names":["React","useEffect","useState","COMPLETE_SESSION_URL","ACCESS_TOKEN","CREATE_REVIEW_URL","Modal","swal","Rating","checkTokenFromResponse","useNavigate","Link","Session","props","window","scrollTo","navigate","console","log","access_token","localStorage","getItem","showSpinner","setShowSpinner","showReviewButtonSpinner","setShowReviewButtonSpinner","showReviewPrompt","setShowReviewPrompt","rating","setRating","handleRating","rate","createReview","event","preventDefault","requestBody","sessionId","session","id","review","target","reviewMessage","value","actualRating","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","updateUser","replace","status","catch","err","finally","setRenderCount","oldValue","completeSession","mentorId","opacity","display","alignContent","fontWeight","marginBottom","fontSize","color","height","createTs","substring","asMentor","menteeName","mentorName","sessionStatus","isReviewDone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { COMPLETE_SESSION_URL, ACCESS_TOKEN, CREATE_REVIEW_URL } from '../constants/url';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport swal from 'sweetalert';\r\nimport Rating from 'react-rating'\r\nimport { checkTokenFromResponse } from '../utils/UserLoginUtils';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nexport const Session = (props) => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n      }, [])\r\n    \r\n      let navigate = useNavigate();\r\n\r\n\r\n    console.log('session obj ', props);\r\n    let access_token = localStorage.getItem(ACCESS_TOKEN);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [showReviewButtonSpinner, setShowReviewButtonSpinner] = useState(false);\r\n    const [showReviewPrompt, setShowReviewPrompt] = useState(false);\r\n    const [rating, setRating] = useState(0);\r\n\r\n    const handleRating = (rate) => {\r\n        setRating(rate);\r\n    }\r\n\r\n    const createReview = (event) => {\r\n\r\n        event.preventDefault();\r\n        setShowReviewButtonSpinner(true);\r\n        let access_token = localStorage.getItem(ACCESS_TOKEN);\r\n\r\n        if (!access_token) {\r\n            swal(\"Oops!\", \"Please login to Book\", \"error\");\r\n            return;\r\n        }\r\n        //construct body\r\n        const requestBody =\r\n        {\r\n            sessionId: props.session.id,\r\n            review: event.target.reviewMessage ? event.target.reviewMessage.value : \"\",\r\n            actualRating: rating\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'authorization': access_token },\r\n            body: JSON.stringify(requestBody)\r\n        };\r\n\r\n        fetch(CREATE_REVIEW_URL, requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if(checkTokenFromResponse(response, props.updateUser)){\r\n                    //navigate to homepage\r\n                    navigate(\"/\", { replace: true });\r\n                    return;                  \r\n                }\r\n                if (response.status == 'Successfully Saved') {\r\n                    swal(\"Thank you\", \"Feedback is successfully shared\", \"success\")\r\n                } else {\r\n                    swal(\"Oops\", \"ERROR OCCURED, TRY AGAIN\", \"error\")\r\n                }\r\n            })\r\n            .catch(\r\n                err => {\r\n                    console.log(err);\r\n                })\r\n            .finally(() => {\r\n                /**\r\n                 * render count basically forces SessionList to reload and rerun useEffect again and call sessions again.\r\n                 */\r\n                setShowReviewButtonSpinner(false);\r\n                setShowReviewPrompt(false);\r\n                props.setRenderCount((oldValue) => (oldValue + 1));\r\n            });\r\n    }\r\n\r\n    const completeSession = (event) => {\r\n        console.log('complete session called');\r\n\r\n        const requestBody = {\r\n            mentorId: props.session.mentorId,\r\n            id: props.session.id,\r\n        };\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'authorization': access_token },\r\n            body: JSON.stringify(requestBody)\r\n        };\r\n\r\n        console.log(requestOptions);\r\n\r\n        setShowSpinner(true);\r\n        fetch(COMPLETE_SESSION_URL, requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if(checkTokenFromResponse(response, props.updateUser)){\r\n                    //navigate to homepage\r\n                    navigate(\"/\", { replace: true });\r\n                    return;                  \r\n                }\r\n                if (response.status == 'Successfully Saved') {\r\n                    swal(\"Awesome\", \"Session is Completed\", \"success\")\r\n                } else {\r\n                    swal(\"Oops\", \"ERROR OCCURED, TRY AGAIN\", \"error\")\r\n                }\r\n            })\r\n            .catch(\r\n                err => {\r\n                    console.log(err);\r\n                })\r\n            .finally(() => {\r\n                /**\r\n                 * render count basically forces SessionList to reload and rerun useEffect again and call sessions again.\r\n                 */\r\n                props.setRenderCount((oldValue) => (oldValue + 1));\r\n                setShowSpinner(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {showReviewPrompt &&\r\n                <Modal\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    style={{ opacity: 1, display: 'block', alignContent: 'center' }}\r\n                    show={true}\r\n                    onHide={() => setShowReviewPrompt(false)}\r\n                    centered>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\" style={{ fontWeight: '700', marginBottom: '5px', fontSize: '20px', color: '#012970', alignContent: 'center' }}>\r\n                            Give Review\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* <h4 className='name-caption'>Book a Mentoring session with {mentorObj.name}</h4> */}\r\n                        <p>\r\n                            Please give your honest feedback/review for the session you had with {props.session.mentorId}.\r\n                        </p>\r\n                        <div>\r\n                            <h4>Overall Rating:</h4>\r\n                            <Rating\r\n                                emptySymbol=\"fa fa-star-o fa-2x \"\r\n                                fullSymbol=\"fa fa-star fa-2x checked\"\r\n                                onChange={handleRating}\r\n                            />\r\n\r\n                            {/* {rating > 0 ? <p>{RATING_MAP.get(rating)}!</p> : <></>} */}\r\n\r\n                        </div>\r\n                        <form onSubmit={createReview} className='d-flex flex-column justify-content-center align-items-center'>\r\n                            <div className=\"form-group align-self-stretch m-1\">\r\n                                <h4>Review</h4>\r\n                                <textarea className=\"form-control\" id=\"reviewMessage\" rows=\"6\" width='100%'></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"myButton mt-2\">\r\n                                {showReviewButtonSpinner ?\r\n                                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    :\r\n                                    <>Send Review</>}\r\n                            </button>\r\n                        </form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            }\r\n            <div class=\"col-lg-4 col-md-6 col-sm-12 mb-2\">\r\n            {/*style={{ width: '20rem', height : '17rem' }}*/}\r\n                <div class=\"card\" style={{height : '17rem' }}>\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\"><div className='text-muted'>Booking Date </div> {props.session.createTs.substring(0, 10)}</li>\r\n                        <li class=\"list-group-item\"><div className='text-muted'>Name </div>  {(props.asMentor) ? props.session.menteeName : props.session.mentorName} </li>\r\n                        <li class=\"list-group-item\"><div className='text-muted'>Current Status </div>  {props.session.sessionStatus}</li>\r\n                    </ul>\r\n                    <div class=\"card-body text-center\">\r\n                        {(props.asMentor) ?\r\n                            (\r\n                                <>\r\n                                    {(props.session.sessionStatus === 'COMPLETED' || props.session.sessionStatus === 'PENDING_MENTEE_FEEDBACK')\r\n                                        ? \"Session Already Completed by you!\" :\r\n                                        <button className='myButton m-lg-1 text-center p-2' onClick={completeSession}>\r\n                                            {showSpinner ?\r\n                                                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                :\r\n                                                <><i class=\"bi bi-award-fill\"></i> Complete</>}\r\n                                        </button>\r\n                                    }\r\n                                </>\r\n                            )\r\n                            : (\r\n                                <>\r\n                                    {\r\n                                        (!props.session.isReviewDone)\r\n                                            ?\r\n                                            (\r\n\r\n                                                <button className='myButton m-lg-1 text-center p-2'\r\n                                                    onClick={() => {\r\n                                                        setShowReviewPrompt(true);\r\n                                                    }}><i class=\"fa fa-commenting-o\"\r\n                                                        aria-hidden=\"true\"></i> Submit Review</button>\r\n                                            )\r\n                                            :\r\n                                            <>\r\n                                                Review Submitted!!!\r\n                                            </>\r\n                                    }\r\n                                </>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}